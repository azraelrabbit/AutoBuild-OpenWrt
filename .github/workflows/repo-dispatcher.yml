#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Repo Dispatcher

on: 
  # push: 
  #   branches:
  #     - master
  # schedule:
  #   - cron: 30 13 * * 6
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: Ubuntu-20.04
    steps:
    
    - name: Trigger Packages Update
      run: |
        sudo timedatectl set-timezone "$TZ"
        if [ ${{ github.event.inputs.ssh }} == 'true' ]; then
          echo "SSH=ssh" >> $GITHUB_ENV
        fi
        if [ "${REPO_URL}" == "${LEDE}" ]; then
          curl -X POST https://api.github.com/repos/coolsnowwolf/lede/dispatches \
          -H "Accept: application/vnd.github.everest-preview+json" \
          -H "Authorization: token ${{ secrets.REPO_TOKEN }}" \
          --data '{"event_type": "update"}'
        elif [ "${REPO_URL}" == "${LIENOL}" ]; then
          curl -X POST https://api.github.com/repos/Lienol/openwrt/dispatches \
          -H "Accept: application/vnd.github.everest-preview+json" \
          -H "Authorization: token ${{ secrets.REPO_TOKEN }}" \
          --data '{"event_type": "update"}'
        elif [ "${REPO_URL}" == "${PROJECT}" ]; then
          curl -X POST https://api.github.com/repos/immortalwrt/immortalwrt/dispatches \
          -H "Accept: application/vnd.github.everest-preview+json" \
          -H "Authorization: token ${{ secrets.REPO_TOKEN }}" \
          --data '{"event_type": "update"}'
        fi

    - name: Trigger Compile
      run: |
        if [ "${REPO_URL}" == "${LEDE}" ]; then
          curl \
          -X POST https://api.github.com/repos/${{ github.repository }}/dispatches \
          -H "Accept: application/vnd.github.everest-preview+json" \
          -H "Authorization: token ${{ secrets.REPO_TOKEN }}" \
          -d '{"event_type": "Lede_newifi_d2 ${{ env.SSH }}", "client_payload": {"target": "Lede_newifi_d2"}}'
          curl \
          -X POST https://api.github.com/repos/${{ github.repository }}/dispatches \
          -H "Accept: application/vnd.github.everest-preview+json" \
          -H "Authorization: token ${{ secrets.REPO_TOKEN }}" \
          -d '{"event_type": "Lede_phicomm_n1 ${{ env.SSH }}", "client_payload": {"target": "Lede_phicomm_n1"}}'
          curl \
          -X POST https://api.github.com/repos/${{ github.repository }}/dispatches \
          -H "Accept: application/vnd.github.everest-preview+json" \
          -H "Authorization: token ${{ secrets.REPO_TOKEN }}" \
          -d '{"event_type": "Lede_xiaomi_r3pro ${{ env.SSH }}", "client_payload": {"target": "Lede_xiaomi_r3pro"}}'
          curl \
          -X POST https://api.github.com/repos/${{ github.repository }}/dispatches \
          -H "Accept: application/vnd.github.everest-preview+json" \
          -H "Authorization: token ${{ secrets.REPO_TOKEN }}" \
          -d '{"event_type": "Lede_phicomm_k2p ${{ env.SSH }}", "client_payload": {"target": "Lede_phicomm_k2p"}}'
        elif [ "${REPO_URL}" == "${LIENOL}" ]; then
          curl \
          -X POST https://api.github.com/repos/${{ github.repository }}/dispatches \
          -H "Accept: application/vnd.github.everest-preview+json" \
          -H "Authorization: token ${{ secrets.REPO_TOKEN }}" \
          -d '{"event_type": "Lede_newifi_d2 ${{ env.SSH }}", "client_payload": {"target": "Lede_newifi_d2"}}'
          curl \
          -X POST https://api.github.com/repos/${{ github.repository }}/dispatches \
          -H "Accept: application/vnd.github.everest-preview+json" \
          -H "Authorization: token ${{ secrets.REPO_TOKEN }}" \
          -d '{"event_type": "Lede_phicomm_n1 ${{ env.SSH }}", "client_payload": {"target": "Lede_phicomm_n1"}}'
          curl \
          -X POST https://api.github.com/repos/${{ github.repository }}/dispatches \
          -H "Accept: application/vnd.github.everest-preview+json" \
          -H "Authorization: token ${{ secrets.REPO_TOKEN }}" \
          -d '{"event_type": "Lede_xiaomi_r3pro ${{ env.SSH }}", "client_payload": {"target": "Lede_xiaomi_r3pro"}}'
          curl \
          -X POST https://api.github.com/repos/${{ github.repository }}/dispatches \
          -H "Accept: application/vnd.github.everest-preview+json" \
          -H "Authorization: token ${{ secrets.REPO_TOKEN }}" \
          -d '{"event_type": "Lede_phicomm_k2p ${{ env.SSH }}", "client_payload": {"target": "Lede_phicomm_k2p"}}'
        elif [ "${REPO_URL}" == "${PROJECT}" ]; then
          curl \
          -X POST https://api.github.com/repos/${{ github.repository }}/dispatches \
          -H "Accept: application/vnd.github.everest-preview+json" \
          -H "Authorization: token ${{ secrets.REPO_TOKEN }}" \
          -d '{"event_type": "Lede_newifi_d2 ${{ env.SSH }}", "client_payload": {"target": "Lede_newifi_d2"}}'
          curl \
          -X POST https://api.github.com/repos/${{ github.repository }}/dispatches \
          -H "Accept: application/vnd.github.everest-preview+json" \
          -H "Authorization: token ${{ secrets.REPO_TOKEN }}" \
          -d '{"event_type": "Lede_phicomm_n1 ${{ env.SSH }}", "client_payload": {"target": "Lede_phicomm_n1"}}'
          curl \
          -X POST https://api.github.com/repos/${{ github.repository }}/dispatches \
          -H "Accept: application/vnd.github.everest-preview+json" \
          -H "Authorization: token ${{ secrets.REPO_TOKEN }}" \
          -d '{"event_type": "Lede_xiaomi_r3pro ${{ env.SSH }}", "client_payload": {"target": "Lede_xiaomi_r3pro"}}'
          curl \
          -X POST https://api.github.com/repos/${{ github.repository }}/dispatches \
          -H "Accept: application/vnd.github.everest-preview+json" \
          -H "Authorization: token ${{ secrets.REPO_TOKEN }}" \
          -d '{"event_type": "Lede_phicomm_k2p ${{ env.SSH }}", "client_payload": {"target": "Lede_phicomm_k2p"}}'
        fi
        
        
        
        
        
        
        
        
        
        
        
        
        
        curl \
        -X POST https://api.github.com/repos/${{ github.repository }}/dispatches \
        -H "Accept: application/vnd.github.everest-preview+json" \
        -H "Authorization: token ${{ secrets.REPO_TOKEN }}" \
        -d '{"event_type": "Lede_newifi_d2 ${{ env.SSH }}", "client_payload": {"target": "Lede_newifi_d2"}}'
        curl \
        -X POST https://api.github.com/repos/${{ github.repository }}/dispatches \
        -H "Accept: application/vnd.github.everest-preview+json" \
        -H "Authorization: token ${{ secrets.REPO_TOKEN }}" \
        -d '{"event_type": "Lede_phicomm_n1 ${{ env.SSH }}", "client_payload": {"target": "Lede_phicomm_n1"}}'
        curl \
        -X POST https://api.github.com/repos/${{ github.repository }}/dispatches \
        -H "Accept: application/vnd.github.everest-preview+json" \
        -H "Authorization: token ${{ secrets.REPO_TOKEN }}" \
        -d '{"event_type": "Lede_xiaomi_r3pro ${{ env.SSH }}", "client_payload": {"target": "Lede_xiaomi_r3pro"}}'
        curl \
        -X POST https://api.github.com/repos/${{ github.repository }}/dispatches \
        -H "Accept: application/vnd.github.everest-preview+json" \
        -H "Authorization: token ${{ secrets.REPO_TOKEN }}" \
        -d '{"event_type": "Lede_phicomm_k2p ${{ env.SSH }}", "client_payload": {"target": "Lede_phicomm_k2p"}}'
        
